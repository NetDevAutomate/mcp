name: Python

on:
  pull_request:
  push:
    branches: [main]

permissions: {}

jobs:
  detect-python:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.find-python.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Find Python projects
        id: find-python
        working-directory: .
        run: |
          PROJECTS=$(find . -name "pyproject.toml" -exec dirname {} \; | sed 's/^\.\///' | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=$PROJECTS" >> $GITHUB_OUTPUT

  python:
    needs: [detect-python]
    if: ${{ needs.detect-python.outputs.matrix != '[]' && needs.detect-python.outputs.matrix != '' }}
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.detect-python.outputs.matrix) }}
    name: Python ${{ matrix.project }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.project }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version-file: ${{ matrix.project }}/.python-version
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    - name: Install dependencies
      run: uv sync --frozen --all-extras --dev
    - name: Run type checking
      run: uv run --frozen pyright --stats
    - name: Run tests with coverage
      run: uv run --frozen pytest --cov --cov-branch --cov-report=term-missing --cov-report=xml
    - name: Upload coverage to codecov
      if: matrix.project == '.'
      uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65cdc061c82b # v4.6.0
      with:
        working-directory: ${{ matrix.project }}
        files: ./coverage.xml
        flags: python
        name: python-${{ matrix.project }}